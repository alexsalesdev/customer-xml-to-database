/**
 * This class is generated by jOOQ
 */
package com.example.dao.entity.tables;


import com.example.dao.entity.Keys;
import com.example.dao.entity.Public;
import com.example.dao.entity.tables.records.CustomerTblRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerTbl extends TableImpl<CustomerTblRecord> {

	private static final long serialVersionUID = -1533006820;

	/**
	 * The reference instance of <code>PUBLIC.CUSTOMER_TBL</code>
	 */
	public static final CustomerTbl CUSTOMER_TBL = new CustomerTbl();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<CustomerTblRecord> getRecordType() {
		return CustomerTblRecord.class;
	}

	/**
	 * The column <code>PUBLIC.CUSTOMER_TBL.GUID</code>.
	 */
	public final TableField<CustomerTblRecord, String> GUID = createField("GUID", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.CUSTOMER_TBL.NAME</code>.
	 */
	public final TableField<CustomerTblRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>PUBLIC.CUSTOMER_TBL.AGE</code>.
	 */
	public final TableField<CustomerTblRecord, Integer> AGE = createField("AGE", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>PUBLIC.CUSTOMER_TBL</code> table reference
	 */
	public CustomerTbl() {
		this("CUSTOMER_TBL", null);
	}

	/**
	 * Create an aliased <code>PUBLIC.CUSTOMER_TBL</code> table reference
	 */
	public CustomerTbl(String alias) {
		this(alias, CUSTOMER_TBL);
	}

	private CustomerTbl(String alias, Table<CustomerTblRecord> aliased) {
		this(alias, aliased, null);
	}

	private CustomerTbl(String alias, Table<CustomerTblRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<CustomerTblRecord> getPrimaryKey() {
		return Keys.CONSTRAINT_B;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<CustomerTblRecord>> getKeys() {
		return Arrays.<UniqueKey<CustomerTblRecord>>asList(Keys.CONSTRAINT_B);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public CustomerTbl as(String alias) {
		return new CustomerTbl(alias, this);
	}

	/**
	 * Rename this table
	 */
	public CustomerTbl rename(String name) {
		return new CustomerTbl(name, null);
	}
}
