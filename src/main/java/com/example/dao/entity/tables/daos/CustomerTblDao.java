/**
 * This class is generated by jOOQ
 */
package com.example.dao.entity.tables.daos;


import com.example.dao.entity.tables.CustomerTbl;
import com.example.dao.entity.tables.records.CustomerTblRecord;

import java.util.List;

import javax.annotation.Generated;
import javax.annotation.PostConstruct;
import javax.annotation.Resource;

import org.jooq.Configuration;
import org.jooq.DSLContext;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Component
public class CustomerTblDao extends DAOImpl<CustomerTblRecord, com.example.dao.entity.tables.pojos.CustomerTbl, String> {

	@Resource
	private DSLContext dsl;

	@PostConstruct
	private void init() {
		System.out.println(this.getClass().getName() + " init jooq config");
		this.setConfiguration(this.dsl.configuration());
	}

	/**
	 * Create a new CustomerTblDao without any configuration
	 */
	public CustomerTblDao() {
		super(CustomerTbl.CUSTOMER_TBL, com.example.dao.entity.tables.pojos.CustomerTbl.class);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected String getId(com.example.dao.entity.tables.pojos.CustomerTbl object) {
		return object.getGuid();
	}

	/**
	 * Fetch records that have <code>GUID IN (values)</code>
	 */
	public List<com.example.dao.entity.tables.pojos.CustomerTbl> fetchByGuid(String... values) {
		return fetch(CustomerTbl.CUSTOMER_TBL.GUID, values);
	}

	/**
	 * Fetch a unique record that has <code>GUID = value</code>
	 */
	public com.example.dao.entity.tables.pojos.CustomerTbl fetchOneByGuid(String value) {
		return fetchOne(CustomerTbl.CUSTOMER_TBL.GUID, value);
	}

	/**
	 * Fetch records that have <code>NAME IN (values)</code>
	 */
	public List<com.example.dao.entity.tables.pojos.CustomerTbl> fetchByName(String... values) {
		return fetch(CustomerTbl.CUSTOMER_TBL.NAME, values);
	}

	/**
	 * Fetch records that have <code>AGE IN (values)</code>
	 */
	public List<com.example.dao.entity.tables.pojos.CustomerTbl> fetchByAge(Integer... values) {
		return fetch(CustomerTbl.CUSTOMER_TBL.AGE, values);
	}
}
